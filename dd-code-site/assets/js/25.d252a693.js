(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{521:function(v,_,e){"use strict";e.r(_);var o=e(6),d=Object(o.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("p",[v._v("MySQL 中使用浮点数和定点数来表示小数。")]),v._v(" "),e("p",[v._v("浮点类型有两种，分别是单精度浮点数 "),e("code",[v._v("float")]),v._v(" 和双精度浮点数 "),e("code",[v._v("double")]),v._v(" ；定点类型只有一种，就是 "),e("code",[v._v("decimal")]),v._v(" 。")]),v._v(" "),e("table",[e("thead",[e("tr",[e("th",[v._v("类型名称")]),v._v(" "),e("th",[v._v("说明")]),v._v(" "),e("th",[v._v("存储需求")])])]),v._v(" "),e("tbody",[e("tr",[e("td",[v._v("FLOAT")]),v._v(" "),e("td",[v._v("单精度浮点数")]),v._v(" "),e("td",[v._v("4 个字节")])]),v._v(" "),e("tr",[e("td",[v._v("DOUBLE")]),v._v(" "),e("td",[v._v("双精度浮点数")]),v._v(" "),e("td",[v._v("8 个字节")])]),v._v(" "),e("tr",[e("td",[v._v("DECIMAL (M, D)，DEC")]),v._v(" "),e("td",[v._v("压缩的“严格”定点数")]),v._v(" "),e("td",[v._v("M+2 个字节")])])])]),v._v(" "),e("p",[e("code",[v._v("decimal")]),v._v(" 类型不同于 "),e("code",[v._v("float")]),v._v(" 和 "),e("code",[v._v("double")]),v._v("。"),e("code",[v._v("double")]),v._v(" 实际上是以字符串的形式存放的，"),e("code",[v._v("decimal")]),v._v(" 可能的最大取值范围与 "),e("code",[v._v("double")]),v._v(" 相同，但是有效的取值范围由 "),e("code",[v._v("M")]),v._v(" 和 "),e("code",[v._v("D")]),v._v(" 决定。如果改变 "),e("code",[v._v("M")]),v._v(" 而固定 "),e("code",[v._v("D")]),v._v("，则取值范围将随 "),e("code",[v._v("M")]),v._v(" 的变大而变大。")]),v._v(" "),e("p",[v._v("从上表中可以看到，"),e("code",[v._v("decimal")]),v._v(" 的存储空间并不是固定的，而由精度值 "),e("code",[v._v("M")]),v._v(" 决定，占用 "),e("code",[v._v("M+2")]),v._v(" 个字节。")]),v._v(" "),e("p",[e("code",[v._v("float")]),v._v(" 类型的取值范围如下：")]),v._v(" "),e("ul",[e("li",[v._v("有符号的取值范围："),e("code",[v._v("-3.402823466E+38 ～ -1.175494351E-38")]),v._v("。")]),v._v(" "),e("li",[v._v("无符号的取值范围："),e("code",[v._v("0 和 -1.175494351E-38 ～ -3.402823466E+38")]),v._v("。")])]),v._v(" "),e("p",[e("code",[v._v("double")]),v._v(" 类型的取值范围如下：")]),v._v(" "),e("ul",[e("li",[v._v("有符号的取值范围："),e("code",[v._v("-1.7976931348623157E+308 ～ -2.2250738585072014E-308")]),v._v("。")]),v._v(" "),e("li",[v._v("无符号的取值范围："),e("code",[v._v("0 和 -2.2250738585072014E-308 ～ -1.7976931348623157E+308")]),v._v("。")])]),v._v(" "),e("blockquote",[e("p",[v._v("提示：不论是定点还是浮点类型，如果用户指定的精度超出精度范围，则会四舍五入进行处理。")])]),v._v(" "),e("p",[e("code",[v._v("float")]),v._v(" 和 "),e("code",[v._v("double")]),v._v(" 在不指定精度时，默认会按照实际的精度（由计算机硬件和操作系统决定），"),e("code",[v._v("decimal")]),v._v(" 如果不指定精度，默认为  "),e("code",[v._v("（10，0）")]),v._v("。")]),v._v(" "),e("p",[v._v("浮点数相对于定点数的优点是在长度一定的情况下，浮点数能够表示更大的范围；缺点是会引起精度问题。")]),v._v(" "),e("blockquote",[e("p",[v._v("在 MySQL 中，定点数以字符串形式存储，在对精度要求比较高的时候（如货币、科学数据），使用 DECIMAL 的类型比较好，另外两个浮点数进行减法和比较运算时也容易出问题，所以在使用浮点数时需要注意，并尽量避免做浮点数比较。")])])])}),[],!1,null,null,null);_.default=d.exports}}]);