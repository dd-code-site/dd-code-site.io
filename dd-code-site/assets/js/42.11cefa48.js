(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{538:function(a,e,t){"use strict";t.r(e);var _=t(6),v=Object(_.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"memcache-概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#memcache-概述"}},[a._v("#")]),a._v(" memcache 概述")]),a._v(" "),t("p",[a._v("memcache 就是一个数据库，但是数据存在内存中。常用来做缓存服务器、将数据库查询的数据缓存起来，减少数据库缓存、加快查询速度。\nmemcache 的数据仅保存在内存中，服务器重启后，数据将会丢失。")]),a._v(" "),t("h2",{attrs:{id:"memcache-使用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#memcache-使用场景"}},[a._v("#")]),a._v(" memcache 使用场景")]),a._v(" "),t("p",[a._v("缓存服务器")]),a._v(" "),t("h2",{attrs:{id:"适合存储的数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#适合存储的数据"}},[a._v("#")]),a._v(" 适合存储的数据")]),a._v(" "),t("ul",[t("li",[a._v("访问比较频繁的数据，安全性较差的数据，丢失无所谓的数据")]),a._v(" "),t("li",[a._v("数据更新比较频繁的数据，比如用户的在线状态")]),a._v(" "),t("li",[a._v("数据的单个键值不能太大，不能超过 1Mb 数据")])]),a._v(" "),t("h2",{attrs:{id:"memcache-可以存储的数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#memcache-可以存储的数据类型"}},[a._v("#")]),a._v(" memcache 可以存储的数据类型")]),a._v(" "),t("p",[a._v("整型、浮点型、布尔型、字符串型、数组型、对象类型、空类型")]),a._v(" "),t("h2",{attrs:{id:"memcache-相关算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#memcache-相关算法"}},[a._v("#")]),a._v(" memcache 相关算法")]),a._v(" "),t("p",[a._v("1、惰性过期机制")]),a._v(" "),t("p",[a._v("说明：memcached 内部不会监视记录是否过期，而是在 get 时查看记录的时间戳，检查记录是否过期，这种技术被称为惰性过期。")]),a._v(" "),t("p",[a._v("好处：减少监控过期产生的开销")]),a._v(" "),t("p",[a._v("2、最近最少使用算法")]),a._v(" "),t("p",[a._v("缓存空间已满，将使用频率最低数据进行删除。")]),a._v(" "),t("h2",{attrs:{id:"memcache-常见问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#memcache-常见问题"}},[a._v("#")]),a._v(" memcache 常见问题")]),a._v(" "),t("h3",{attrs:{id:"_1、缓存雪崩"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、缓存雪崩"}},[a._v("#")]),a._v(" 1、缓存雪崩")]),a._v(" "),t("p",[a._v("场景：项目缓存同一时间失效")]),a._v(" "),t("p",[a._v("问题：瞬间几万次、几千万次的同时访问数据库，数据库崩溃。")]),a._v(" "),t("p",[a._v("解决：")]),a._v(" "),t("p",[a._v("①不要集中设置缓存有效期")]),a._v(" "),t("p",[a._v("②控制缓存在闲时过期")]),a._v(" "),t("p",[a._v("③主从复制、读写分离")]),a._v(" "),t("h3",{attrs:{id:"_2、永久数据被踢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、永久数据被踢"}},[a._v("#")]),a._v(" 2、永久数据被踢")]),a._v(" "),t("p",[a._v("原因：因为惰性过期机制和最少使用机制导致")]),a._v(" "),t("p",[a._v("解决：永久数据和飞=非永久数据分开存放")]),a._v(" "),t("p",[a._v("​")])])}),[],!1,null,null,null);e.default=v.exports}}]);